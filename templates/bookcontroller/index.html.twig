{% extends 'base.html.twig' %}

{% block title %}Biblioteca - Gest√£o de Livros{% endblock %}

{% block body %}
    <h1>Gerenciador de Livros</h1>

    <section class="form-section">
        <form id="book-form">
            <input type="hidden" id="book-id">
            
            <div class="input-group">
                <label for="title">T√≠tulo:</label>
                <input type="text" id="title" required>
            </div>
            
            <div class="input-group">
                <label for="author">Autor:</label>
                <input type="text" id="author" required>
            </div>
            
            <div class="input-group">
                <label for="year">Ano de Publica√ß√£o:</label>
                <input type="number" id="year" required>
            </div>
            
            <button type="submit">Salvar</button>
        </form>
    </section>

    <section class="table-section">
        <table>
            <thead>
                <tr>
                    <th>ID</th>
                    <th>T√≠tulo</th>
                    <th>Autor</th>
                    <th>Ano</th>
                    <th>A√ß√µes</th>
                </tr>
            </thead>
            <tbody id="book-list"></tbody>
        </table>
    </section>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const bookForm = document.getElementById("book-form");
            const bookList = document.getElementById("book-list");

            function fetchBooks() {
                fetch("/api/books")
                    .then(res => res.json())
                    .then(data => {
                        bookList.innerHTML = "";
                        data.forEach(book => {
                            const row = document.createElement("tr");
                            row.innerHTML = `
                                <td>${book.id}</td>
                                <td>${book.title}</td>
                                <td>${book.author}</td>
                                <td>${book.year}</td>
                                <td>
                                    <button class="edit" data-id="${book.id}" data-title="${book.title}" data-author="${book.author}" data-year="${book.year}">‚úèÔ∏è</button>
                                    <button class="delete" data-id="${book.id}">üóëÔ∏è</button>
                                </td>
                            `;
                            bookList.appendChild(row);
                        });
                        attachEventListeners();
                    });
            }

            function attachEventListeners() {
                document.querySelectorAll(".edit").forEach(btn => {
                    btn.addEventListener("click", function() {
                        document.getElementById("book-id").value = this.dataset.id;
                        document.getElementById("title").value = this.dataset.title;
                        document.getElementById("author").value = this.dataset.author;
                        document.getElementById("year").value = this.dataset.year;
                    });
                });

                document.querySelectorAll(".delete").forEach(btn => {
                    btn.addEventListener("click", function() {
                        deleteBook(this.dataset.id);
                    });
                });
            }

            function deleteBook(id) {
                Swal.fire({
                    title: "Tem certeza?",
                    text: "Essa a√ß√£o n√£o pode ser desfeita!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonText: "Sim, excluir!"
                }).then(result => {
                    if (result.isConfirmed) {
                        fetch(`/api/books/${id}`, { method: "DELETE" })
                            .then(() => {
                                Swal.fire("Exclu√≠do!", "O livro foi removido.", "success");
                                fetchBooks();
                            });
                    }
                });
            }

            bookForm.addEventListener("submit", event => {
                event.preventDefault();
                const id = document.getElementById("book-id").value;
                const title = document.getElementById("title").value;
                const author = document.getElementById("author").value;
                const year = document.getElementById("year").value;

                const method = id ? "PUT" : "POST";
                const url = id ? `/api/books/${id}` : "/api/books";
                
                fetch(url, {
                    method,
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ title, author, year })
                }).then(() => {
                    Swal.fire("Sucesso!", "Livro salvo com sucesso.", "success");
                    bookForm.reset();
                    document.getElementById("book-id").value = "";
                    fetchBooks();
                });
            });

            fetchBooks();
        });
    </script>

    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            padding: 20px;
        }
        h1 { text-align: center; }
        .form-section, .table-section {
            max-width: 600px;
            margin: 20px auto;
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        }
        .input-group {
            margin-bottom: 15px;
        }
        label { font-weight: bold; display: block; }
        input { width: 100%; padding: 10px; border: 1px solid #ccc; border-radius: 5px; }
        button {
            width: 100%;
            padding: 10px;
            background: #28a745;
            color: white;
            border: none;
            cursor: pointer;
            border-radius: 5px;
        }
        button:hover { background: #218838; }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        th, td {
            padding: 10px;
            border: 1px solid #ddd;
            text-align: center;
        }
        th { background: #007bff; color: white; }
        .edit, .delete {
            border: none;
            padding: 5px;
            cursor: pointer;
            border-radius: 4px;
        }
        .edit { background: #ffc107; }
        .delete { background: #dc3545; }
    </style>
{% endblock %}
